syntax = "v1"

info (
	title:  "im消息服务api"
	author: "@hnz"
	email:  "hnz_00@126.com"
)

type (
	ChatLog {
		Id             string `json:"id,omitempty"`
		ConversationId string `json:"conversationId,omitempty"`
		ReceiveId      string `json:"receiveId,omitempty"`
		MsgType        int32  `json:"msgType,omitempty"`
		MsgContent     string `json:"msgContent,omitempty"`
		ChatType       int32  `json:"chatType,omitempty"`
		SendTime       int64  `json:"sendTime,omitempty"`
	}
	Conversation {
		ConversationId string `json:"conversationId,omitempty"`
		ChatType       int32  `json:"chatType,omitempty"`
		IsShow         bool   `json:"isShow,omitempty"`
		Seq            int64  `json:"seq,omitempty"`
		Read           int32  `json:"read,omitempty"`
	}
)

// --------- im-api req & resp ---------
type (
	// ---------------- ChatLog
	ChatLogReq {
		MsgId          string `json:"msgId"`
		ConversationId string `json:"conversationId"`
		StartSendTime  int64  `json:"startSendTime,omitempty"`
		EndSendTime    int64  `json:"endSendTime,omitempty"`
		Count          int64  `json:"count,omitempty"`
	}
	ChatLogResp {
		List []*ChatLog `json:"list"`
	}
	// ---------------- GetConvesations
	GetConvesationsReq  {}
	GetConvesationsResp {
		ConversationList map[string]*Conversation `json:"conversationList"`
	}
	// ---------------- PutConvesations
	PutConvesationsReq {
		ConversationList map[string]*Conversation `json:"conversationList"`
	}
	PutConvesationsResp  {}
	// ---------------- SetUpUserConvesation
	SetUpUserConvesationReq {
		SendId    string `json:"sendId,omitempty"`
		ReceiveId string `json:"receiveId,omitempty"`
		ChatType  int32  `json:"chatType,omitempty"`
	}
	SetUpUserConvesationResp  {}
	// ---------------- GetChatLogReadRecords
	GetChatLogReadRecordsReq {
		MsgId string `json:"msgId"`
	}
	GetChatLogReadRecordsResp {
		Reads   []string `json:"reads"`
		UnReads []string `json:"unReads"`
	}
)

@server (
	prefix: v1/im
	jwt:    JwtAuth
)
service im {
	@doc "根据用户获取聊天记录"
	@handler getChatLog
	get /chatlog (ChatLogReq) returns (ChatLogResp)

	@doc "获取聊天记录已读未读记录"
	@handler getChatLogReadRecords
	get /chatlog/readRecords (GetChatLogReadRecordsReq) returns (GetChatLogReadRecordsResp)

	@doc "获取会话列表"
	@handler getConvesations
	get /conversation (GetConvesationsReq) returns (GetConvesationsResp)

	@doc "更新会话列表"
	@handler putConvesations
	put /conversation (PutConvesationsReq) returns (PutConvesationsResp)

	@doc "建立会话列表"
	@handler setUpUserConvesation
	post /setup/conversations (SetUpUserConvesationReq) returns (SetUpUserConvesationResp)
}

